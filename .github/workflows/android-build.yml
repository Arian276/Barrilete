name: Android CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-debug:
    name: Build Debug APK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      # Cache y wrapper de Gradle
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      # Instalar SDK de Android (api/build-tools ajustables si querés)
      - name: Set up Android SDK
        uses: android-actions/setup-android@v3
        with:
          api-level: 34
          target: default
          arch: x86_64
          build-tools: "34.0.0"

      - name: Build Debug
        run: ./gradlew clean :app:assembleDebug

      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk
          path: app/build/outputs/apk/debug/*.apk

  # Job opcional para firmar y generar Release si cargás los secretos
  build-release:
    name: Build Release APK (signed)
    needs: build-debug
    runs-on: ubuntu-latest
    if: ${{ secrets.ANDROID_KEYSTORE_BASE64 != '' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3
        with:
          api-level: 34
          target: default
          arch: x86_64
          build-tools: "34.0.0"

      # Restaurar keystore desde secreto (Base64)
      - name: Prepare keystore
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > signing.jks
          echo "STORE_FILE=$(pwd)/signing.jks" >> $GITHUB_ENV
          echo "STORE_PASSWORD=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" >> $GITHUB_ENV
          echo "KEY_ALIAS=${{ secrets.ANDROID_KEY_ALIAS }}" >> $GITHUB_ENV
          echo "KEY_PASSWORD=${{ secrets.ANDROID_KEY_PASSWORD }}" >> $GITHUB_ENV

      - name: Build Release
        run: ./gradlew :app:assembleRelease

      - name: Upload Release APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: app/build/outputs/apk/release/*.apk
